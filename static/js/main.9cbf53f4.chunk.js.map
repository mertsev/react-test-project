{"version":3,"sources":["components/navbar.tsx","views/App.tsx","common/index.ts","reducers/index.ts","reducers/number-collection.reducer.ts","reducers/btc-data-collection.reducer.ts","api/number-generator.api.ts","api/btc-data.api.ts","actions.ts","sagas/number-collection.sagas.ts","sagas/btc-data-collection.sagas.ts","sagas/index.ts","app/store.ts","serviceWorker.ts","components/viewer/btc-data-viewer.container.tsx","components/viewer/number-viewer.container.tsx","components/viewer/number-viewer.component.tsx","components/viewer/btc-data-viewer.component.tsx","components/setter/btc-data-setter.container.tsx","components/setter/number-setter.container.tsx","components/setter/number-setter.component.tsx","components/setter/btc-data-setter.component.tsx","views/material-test/MaterialHome.tsx","views/spark/SparkHome.tsx","index.tsx"],"names":["NavBar","className","to","Switch","value","inputProps","App","actionIds","rootReducers","combineReducers","numberCollection","state","action","type","payload","btcPriceCollection","initialNumber","generateNewNumber","Promise","resolve","setTimeout","btcPrice","getBtcData","axios","method","url","responseType","then","response","console","log","data","error","btcDataCompletedAction","btcNumber","watchNewGeneratedNumberRequestStart","requestNewGeneratedNumber","takeEvery","call","generatedNumber","put","watchNewPriceRequestStart","requestNewPriceNumber","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","Boolean","window","location","hostname","match","BtcDataViewerContainer","connect","dispatch","props","map","currentNumber","key","newBtcNumber","BtcDataSetterContainer","onRequestNewNumber","Button","variant","color","onClick","onRequestNewPriceData","MaterialHome","useStyles","makeStyles","theme","createStyles","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","MyButton","styled","margin","SparkHome","classes","Grid","container","item","xs","Paper","id","itemProp","sm","ReactDOM","render","StrictMode","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9cbf53f4.chunk.js","sourcesContent":["import React from 'react';\n//import '../App.css';\nimport './navbar.css'\n\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Switch } from '@material-ui/core';\n\nfunction NavBar() {\n  return (\n    <div className=\"navbar\">\n      <header className=\"navbar-header\">\n        <span>\n          <nav>\n            <ul className=\"nav__links\">\n            <li><Link to=\"/\">Main page</Link></li>\n            <li><Link to=\"/material\">Material test app</Link></li>\n            <li><Link to=\"/spark\">Spark</Link></li>\n            </ul>\n          </nav>\n        </span>\n        <Switch value=\"checkedA\" inputProps={{ 'aria-label': 'Switch A' }} />\n      </header>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport NavBar from '../components/navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <NavBar/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const actionIds = {\n  GET_NUMBER_REQUEST_START:\n    '[0] Request a new number to the NumberGenerator async service.',\n  GET_NUMBER_REQUEST_COMPLETED:\n    '[1] NumberGenerator async service returned a new number.',\n  GET_BTC_DATA_REQUEST_START:\n    '[2] Request a new number to the btc price async service.',\n  GET_BTC_DATA_REQUEST_COMPLETED:\n    '[3] Btc price async service returned a new number.'\n};\n\nexport interface BaseAction {\n  type: string;\n  payload: any;\n}\n\nexport interface BtcNumberAction {\n  type: string;\n  payload: any;\n}\n","import { combineReducers } from 'redux';\nimport {\n  numberCollectionReducer,\n  NumberCollectionState,\n} from './number-collection.reducer';\n\nimport {\n  btcNumberCollectionReducer,\n  btcNumberCollectionState,\n} from './btc-data-collection.reducer';\n\nexport interface State {\n  btcPriceCollection: btcNumberCollectionState;\n  numberCollection: NumberCollectionState;\n}\n\nexport const rootReducers = combineReducers({\n  numberCollection: numberCollectionReducer,\n  btcPriceCollection: btcNumberCollectionReducer\n});\n","import { BaseAction, actionIds } from '../common';\n\nexport type NumberCollectionState = number[];\n\nexport const numberCollectionReducer = (\n  state: NumberCollectionState = [0],\n  action: BaseAction\n) => {\n  switch (action.type) {\n    case actionIds.GET_NUMBER_REQUEST_COMPLETED:\n      return [...state, action.payload];\n  }\n  return state;\n};\n","import { BtcNumberAction, actionIds } from '../common';\n\nexport type btcNumberCollectionState = number[];\n\nexport const btcNumberCollectionReducer = (\n  state: btcNumberCollectionState = [0],\n  action: BtcNumberAction\n) => {\n  switch (action.type) {\n    case actionIds.GET_BTC_DATA_REQUEST_COMPLETED:\n      return [...state, action.payload];\n  }\n  return state;\n};\n","let initialNumber = 0;\n\nexport const generateNewNumber = (): Promise<number> => {\n  const promise = new Promise<number>(resolve => {\n    setTimeout(() => {\n      initialNumber += 1;\n      resolve(initialNumber);\n    }, 500);\n  });\n\n  return promise;\n};\n","import axios from \"axios\";\n\nexport function fetchFromApi() {\n  return axios({\n    method: 'get',\n    url: 'https://blockchain.info/ticker',\n    responseType: 'json'\n  })\n}\n\nlet btcPrice = 0;\n\nexport const getBtcData = (): Promise<number> => {\n  const promise = new Promise<number>(resolve => {\n      fetchFromApi().then((response) => {\n        console.log(response.data[\"USD\"][\"last\"]);\n        btcPrice = response.data[\"USD\"][\"last\"];\n        resolve(btcPrice);\n      }, (error) => {\n        console.log(error);\n      });\n  });\n\n  return promise;\n};\n","import { BaseAction, actionIds } from './common';\n\nexport const numberRequestStartAction = (): BaseAction => ({\n  type: actionIds.GET_NUMBER_REQUEST_START,\n  payload: null,\n});\n\nexport const numberRequestCompletedAction = (\n  numberGenerated: number\n): BaseAction => ({\n  type: actionIds.GET_NUMBER_REQUEST_COMPLETED,\n  payload: numberGenerated,\n});\n\nexport const btcDataRequestStartAction = (): BaseAction => ({\n  type: actionIds.GET_BTC_DATA_REQUEST_START,\n  payload: null,\n});\n\nexport const btcDataCompletedAction = (\n  btcNumber: number\n): BaseAction => ({\n  type: actionIds.GET_BTC_DATA_REQUEST_COMPLETED,\n  payload: btcNumber\n});","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { generateNewNumber } from '../api';\nimport { numberRequestCompletedAction } from '../actions';\nimport { actionIds } from '../common';\n\nexport function* watchNewGeneratedNumberRequestStart() {\n  yield takeEvery(\n    actionIds.GET_NUMBER_REQUEST_START,\n    requestNewGeneratedNumber\n  );\n}\n\nfunction* requestNewGeneratedNumber() {\n  const generatedNumber = yield call(generateNewNumber);\n  yield put(numberRequestCompletedAction(generatedNumber));\n}\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getBtcData } from '../api';\nimport { btcDataCompletedAction } from '../actions';\nimport { actionIds } from '../common';\n\nexport function* watchNewPriceRequestStart() {\n  yield takeEvery(\n    actionIds.GET_BTC_DATA_REQUEST_START,\n    requestNewPriceNumber\n  );\n}\n\nfunction* requestNewPriceNumber() {\n  const btcNumber = yield call(getBtcData);\n  yield put(btcDataCompletedAction(btcNumber));\n}\n","import { all, fork } from 'redux-saga/effects';\nimport { watchNewGeneratedNumberRequestStart } from './number-collection.sagas';\nimport { watchNewPriceRequestStart } from './btc-data-collection.sagas';\n\nexport const rootSaga = function* root() {\n  yield all([fork(watchNewGeneratedNumberRequestStart)]);\n  yield all([fork(watchNewPriceRequestStart)]);\n};\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootReducers } from '../reducers';\r\nimport { rootSaga } from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\nimport { State } from '../../reducers';\nimport { BtcDataViewerComponent } from './btc-data-viewer.component';\n\nconst mapStateToProps = (state: State) => ({\n  btcPriceCollection: state.btcPriceCollection,\n});\n\nconst mapDispatchToProps = (dispatch: (arg0: import(\"../../common\").BaseAction) => any) => ({});\n\nexport const BtcDataViewerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BtcDataViewerComponent);\n","import { connect } from 'react-redux';\nimport { State } from '../../reducers';\nimport { NumberViewerComponent } from './number-viewer.component';\n\nconst mapStateToProps = (state: State) => ({\n  numberCollection: state.numberCollection,\n});\n\nconst mapDispatchToProps = (dispatch: (arg0: import(\"../../common\").BaseAction) => any) => ({});\n\nexport const NumberViewerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NumberViewerComponent);\n","import * as React from 'react';\n\ninterface Props {\n  numberCollection: number[];\n}\n\nexport const NumberViewerComponent: React.FunctionComponent<Props> = props => (\n  <>\n    <h5>Generated numbers collection:</h5>\n    <ul>\n      {props.numberCollection.map(currentNumber => (\n        <li key={currentNumber}>{currentNumber}</li>\n      ))}\n    </ul>\n  </>\n);\n","import * as React from 'react';\n\ninterface Props {\n  btcPriceCollection: number[];\n}\n\nexport const BtcDataViewerComponent: React.FunctionComponent<Props> = props => (\n  <>\n    <h5>Generated numbers collection:</h5>\n    <ul>\n      {props.btcPriceCollection.map(newBtcNumber => (\n        <li key={newBtcNumber}>{newBtcNumber}</li>\n      ))}\n    </ul>\n  </>\n);\n","import { connect } from 'react-redux';\nimport { btcDataRequestStartAction } from '../../actions';\nimport { BtcDataComponent } from './btc-data-setter.component';\n\nconst mapDispatchToProps = (dispatch: (arg0: import(\"../../common\").BaseAction) => any) => ({\n  onRequestNewPriceData: () => dispatch(btcDataRequestStartAction()),\n});\n\nexport const BtcDataSetterContainer = connect(\n  null,\n  mapDispatchToProps\n)(BtcDataComponent);\n","import { connect } from 'react-redux';\nimport { numberRequestStartAction } from '../../actions';\nimport { NumberSetterComponent } from './number-setter.component';\n\nconst mapDispatchToProps = (dispatch: (arg0: import(\"../../common\").BaseAction) => any) => ({\n  onRequestNewNumber: () => dispatch(numberRequestStartAction()),\n});\n\nexport const NumberSetterContainer = connect(\n  null,\n  mapDispatchToProps\n)(NumberSetterComponent);\n","import * as React from 'react';\nimport { Button } from '@material-ui/core';\n\ninterface Props {\n  onRequestNewNumber: () => void;\n}\n\nexport const NumberSetterComponent: React.FunctionComponent<Props> = props => (\n  <Button variant=\"contained\" color=\"primary\" onClick={props.onRequestNewNumber}>Request new number</Button>\n);\n","import * as React from 'react';\nimport { Button } from '@material-ui/core';\n\ninterface Props {\n  onRequestNewPriceData: () => void;\n}\n\nexport const BtcDataComponent: React.FunctionComponent<Props> = props => (\n  <Button variant=\"contained\" color=\"primary\" onClick={props.onRequestNewPriceData}>btc Request new number</Button>\n);\n","import React from 'react';\n//import logo from './logo.svg';\nimport { BtcDataViewerContainer, BtcDataSetterContainer } from '../../components';\nimport NavBar from '../../components/navbar';\n\nfunction MaterialHome() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n        <BtcDataViewerContainer/>\n        <BtcDataSetterContainer/>\n    </div>\n  );\n}\n\nexport default MaterialHome;\n","import React from 'react';\n//import logo from './logo.svg';\nimport NavBar from '../../components/navbar';\nimport { Button, styled, Grid, Paper } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport './SparkHome.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nconst MyButton = styled(Button)({\n    margin: 5\n});\n\nfunction SparkHome() {\n  const classes = useStyles();\n  return (\n    <div>\n    <div className=\"App\">\n        <NavBar/>\n        <MyButton variant=\"contained\" color=\"primary\">Домой</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Учредители</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Связи</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Надежность</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Финансы</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Госзакупки</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Суды</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Долги</MyButton>\n        <MyButton variant=\"contained\" color=\"primary\">Проверки</MyButton>\n    </div>\n\n    <div className={classes.root}>\n    <Grid container spacing={3}>\n      <Grid item xs={8}>\n        <Paper className={classes.paper}>\n          <div className=\"companyName\"><h3>ПУБЛИЧНОЕ АКЦИОНЕРНОЕ ОБЩЕСТВО \"НЕФТЯНАЯ КОМПАНИЯ \"РОСНЕФТЬ\"</h3></div>\n          <div className=\"companyStatus\" color=\"lightGreen\"><p>Действующая организация</p></div>\n          <dl className=\"companyCol\">\n            <dt className=\"company-info__title\">ОГРН</dt>\n            <dd className=\"company-info__text\">\n              <span id=\"clip_ogrn\">1027700043502</span>\n            </dd>\n            <dd className=\"company-info__text\">\n              <span id=\"clip_ogrn\"> от 19 июля 2002 г.</span>\n            </dd>\n          </dl>\n          <dl className=\"companyCol\">\n            <dt className=\"company-info__title\">ИНН/КПП</dt>\n            <dd className=\"company-info__text\">\n              <span id=\"clip_inn\">7706107510</span>\n            </dd>\n            <dd className=\"company-info__text\">\n              <span id=\"clip_kpp\">770601001</span>\n            </dd>\n          </dl>\n          <dl className=\"companyCol\">\n            <dt className=\"company-info__title\">Дата регистрации</dt>\n            <dd className=\"company-info__text\">\n              <span id=\"foundingDate\">07.06.1993</span>\n            </dd>\n            <dt className=\"company-info__title\">Уставный капитал</dt>\n            <dd className=\"company-info__text\">\n              <span id=\"foundingDate\">105 981 778,17 руб.</span>\n            </dd>\n          </dl>\n          <dt className=\"company-info__title\">Юридический адрес</dt>\n          <dd className=\"company-info__text\">\n              <span itemProp=\"address\">\n                \n              </span>\n            </dd>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Paper className={classes.paper}>xs=12 sm=6</Paper>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Paper className={classes.paper}>xs=12 sm=6</Paper>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Paper className={classes.paper}>xs=6 sm=3</Paper>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Paper className={classes.paper}>xs=6 sm=3</Paper>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Paper className={classes.paper}>xs=6 sm=3</Paper>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Paper className={classes.paper}>xs=6 sm=3</Paper>\n      </Grid>\n    </Grid>\n    </div>\n    </div>\n  );\n}\n\nexport default SparkHome;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport MaterialHome from './views/material-test/MaterialHome';\r\nimport SparkHome from './views/spark/SparkHome';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n          <Route path=\"/\" exact component={App} />\r\n          <Route path=\"/material\" component={MaterialHome} />\r\n          <Route path=\"/spark\" component={SparkHome} />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}